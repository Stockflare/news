{

  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Launches News Service",

  "Parameters" : {

    "StackOutputsArn" : {
      "Type" : "String"
    },

    "ServiceName" : {
      "Type" : "String"
    },

    "ServicePort" : {
      "Type" : "String"
    },

    "ServiceImage" : {
      "Type" : "String"
    },

    "ServiceVersion" : {
      "Type" : "String"
    },

    "DesiredCount" : {
      "Type" : "String",
      "Default" : "1"
    },

    "DBName": {
      "Type": "String"
    },

    "DBUsername": {
      "NoEcho" : "true",
      "Type": "String"
    },

    "DBPassword": {
      "NoEcho" : "true",
      "Type": "String"
    },

    "DBAllocatedStorage" : {
      "Default": "10",
      "Type": "Number"
    },

    "DBSnapshotArn" : {
      "Type" : "String",
      "Default" : ""
    }

  },

  "Conditions" : {

    "UseDBSnapshot" : { "Fn::Not" : [{ "Fn::Equals" : [ { "Ref" : "DBSnapshotArn" }, "" ] }] }

  },

  "Resources" : {

    "Registry": {
      "Type": "Custom::StackOutputs",
      "Properties": {
        "ServiceToken": { "Ref" : "StackOutputsArn" },
        "StackName" : "registry"
      }
    },

    "Kibana": {
      "Type": "Custom::StackOutputs",
      "Properties": {
        "ServiceToken": { "Ref" : "StackOutputsArn" },
        "StackName" : "kibana"
      }
    },

    "Network": {
      "Type": "Custom::StackOutputs",
      "Properties": {
        "ServiceToken": { "Ref" : "StackOutputsArn" },
        "StackName" : "network"
      }
    },

    "Environment": {
      "Type": "Custom::StackOutputs",
      "Properties": {
        "ServiceToken": { "Ref" : "StackOutputsArn" },
        "StackName" : "environment"
      }
    },

    "CoreOS": {
      "Type": "Custom::StackOutputs",
      "Properties": {
        "ServiceToken": { "Ref" : "StackOutputsArn" },
        "StackName" : "coreos"
      }
    },

    "LoggingGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": "5"
      }
    },

    "ServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": [ "ecs.amazonaws.com" ]
            },
            "Action": [ "sts:AssumeRole" ]
          }]
        },
        "Path": "/",
        "Policies": [ {
          "PolicyName": "root",
          "PolicyDocument": {
            "Version" : "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "logs:Create*",
                  "logs:PutLogEvents"
                ],
                "Resource": "arn:aws:logs:*:*:*"
              },
              {
                "Effect": "Allow",
                "Action": [
                  "ec2:AuthorizeSecurityGroupIngress",
                  "ec2:Describe*",
                  "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                  "elasticloadbalancing:Describe*",
                  "elasticloadbalancing:RegisterInstancesWithLoadBalancer"
                ],
                "Resource": [ "*" ]
              }
            ]
          }
        }]
      }
    },

    "ServiceDefinition" : {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties" : {
        "ContainerDefinitions" : [
          {
            "Name" : { "Fn::Join" : ["_", ["cloudwatch", { "Ref" : "ServiceName" }]] },
            "Image" : "stockflare/logger",
            "Memory" : "256",
            "Cpu" : "128",
            "Environment" : [
              {
                "Name" : "AWS_REGION",
                "Value" : { "Ref" : "AWS::Region" }
              },
              {
                "Name" : "CLOUDWATCH_LOG_GROUP",
                "Value" : { "Ref" : "LoggingGroup" }
              }
            ]
          },
          {
            "Name" : { "Ref" : "ServiceName" },
            "Essential" : "true",
            "Command" : ["broadcast", "puma"],
            "Image" : { "Fn::Join" : ["", [
              { "Fn::GetAtt": [ "Registry", "URL" ] }, "/",
              { "Ref" : "ServiceImage" }, ":", { "Ref" : "ServiceVersion" }]]
            },
            "Memory" : "512",
            "Cpu" : "256",
            "Links" : [
              { "Fn::Join" : ["_", ["cloudwatch", { "Ref" : "ServiceName" }]] }
            ],
            "Environment" : [
              {
                "Name" : "RAILS_ENV",
                "Value" : "production"
              },
              {
                "Name" : "HOSTED_ZONE",
                "Value" : { "Fn::GetAtt": [ "CoreOS", "HostedZone" ] }
              },
              {
                "Name" : "PORT",
                "Value" : { "Ref" : "ServicePort" }
              },
              {
                "Name" : "LOGGER_TAG",
                "Value" : { "Ref" : "ServiceName" }
              },
              {
                "Name" : "LOGGER_HOSTNAME",
                "Value" : { "Fn::Join" : ["_", ["cloudwatch", { "Ref" : "ServiceName" }]] }
              },
              {
                "Name" : "SECRET_KEY_BASE",
                "Value" : { "Ref" : "AWS::StackId" }
              },
              {
                "Name" : "DB_USERNAME",
                "Value" : { "Ref" : "DBUsername" }
              },
              {
                "Name" : "DB_PASSWORD",
                "Value" : { "Ref" : "DBPassword" }
              },
              {
                "Name" : "DB_HOST",
                "Value" : { "Fn::GetAtt" : ["DBInstance", "Endpoint.Address"] }
              },
              {
                "Name" : "DB_PORT",
                "Value" : { "Fn::GetAtt": [ "DBInstance", "Endpoint.Port" ] }
              },
              {
                "Name" : "DB_NAME",
                "Value" : { "Ref" : "DBName" }
              }
            ],
            "PortMappings" : [
              {
                "ContainerPort" : { "Ref" : "ServicePort" },
                "HostPort" : { "Ref" : "ServicePort" }
              }
            ]
          }
        ]
      }
    },

    "Service": {
      "Type": "AWS::ECS::Service",
      "Properties" : {
        "Cluster": { "Fn::GetAtt": [ "CoreOS", "ECSCluster" ] },
        "DesiredCount": { "Ref": "DesiredCount" },
        "TaskDefinition" : { "Ref":"ServiceDefinition" },
        "Role" : {"Fn::GetAtt" : ["ServiceRole", "Arn"] },
        "LoadBalancers" : [
          {
            "LoadBalancerName" : { "Ref" : "ElasticLoadBalancer" },
            "ContainerName" : { "Ref" : "ServiceName" },
            "ContainerPort" : { "Ref" : "ServicePort" }
          }
        ]
      }
    },

    "SubscribeKibanaToLoggingGroup": {
      "Type": "Custom::LogSubscriber",
      "Properties": {
        "ServiceToken": { "Fn::GetAtt": [ "Kibana", "SubscriberArn" ] },
        "LogGroup" : { "Ref" : "LoggingGroup" },
        "Name" : { "Ref" : "ServiceName" },
        "Pattern" : "[..., ip, auth, user, timestamp, request, status >= 200, bytes > 0, response]",
        "Role" : { "Fn::GetAtt": [ "Kibana", "StreamRole" ] },
        "Stream" : { "Fn::GetAtt": [ "Kibana", "Stream" ] },
        "Region" : { "Ref" : "AWS::Region" }
      }
    },

    "ElasticLoadBalancer" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
        "AccessLoggingPolicy" : {
          "EmitInterval" : "60",
          "Enabled" : "true",
          "S3BucketName" : { "Fn::GetAtt": [ "Environment", "LoggingBucket" ] },
          "S3BucketPrefix" : { "Fn::Join" :  ["", ["coreos/", { "Ref" : "ServiceName" }, "/elb" ]] }
        },
        "SecurityGroups" : [ { "Ref" : "LoadBalancerSecurityGroup" } ],
        "Subnets" : [
          { "Fn::GetAtt": [ "Network", "PublicSubnetA" ] },
          { "Fn::GetAtt": [ "Network", "PublicSubnetB" ] },
          { "Fn::GetAtt": [ "Network", "PublicSubnetC" ] }
        ],
        "Listeners" : [
          {
            "LoadBalancerPort" : "80",
            "InstancePort" : { "Ref" : "ServicePort" },
            "Protocol" : "HTTP"
          }
        ],
        "HealthCheck" : {
          "Target" : { "Fn::Join" : ["", ["HTTP:", { "Ref" : "ServicePort" }, "/ping"]] },
          "HealthyThreshold" : "3",
          "UnhealthyThreshold" : "5",
          "Interval" : "20",
          "Timeout" : "10"
        }
      }
    },

    "DBSubnetGroup" : {
      "Type" : "AWS::RDS::DBSubnetGroup",
      "Properties" : {
        "DBSubnetGroupDescription" : "Subnets available for the RDS DB Instance",
        "SubnetIds" : [
          { "Fn::GetAtt": [ "Network", "PrivateSubnetA" ] },
          { "Fn::GetAtt": [ "Network", "PrivateSubnetB" ] },
          { "Fn::GetAtt": [ "Network", "PrivateSubnetC" ] }
        ]
      }
    },

    "DBInstance" : {
      "Type" : "AWS::RDS::DBInstance",
      "Properties" : {
        "DBName" : { "Ref" : "DBName" },
        "AllocatedStorage" : { "Ref" : "DBAllocatedStorage" },
        "DBInstanceClass" : "db.t2.small",
        "DBSubnetGroupName" : { "Ref" : "DBSubnetGroup" },
        "BackupRetentionPeriod" : "3",
        "PreferredBackupWindow" : "05:00-05:30",
        "Engine" : "MySQL",
        "EngineVersion" : "5.6",
        "MasterUsername" : {
          "Fn::If" : [
            "UseDBSnapshot",
            {"Ref" : "AWS::NoValue"},
            {"Ref" : "DBUsername"}
          ]
        },
        "MasterUserPassword" : {
          "Fn::If" : [
            "UseDBSnapshot",
            {"Ref" : "AWS::NoValue"},
            {"Ref" : "DBPassword"}
          ]
        },
        "DBSnapshotIdentifier" : {
          "Fn::If" : [
            "UseDBSnapshot",
            {"Ref" : "DBSnapshotArn"},
            {"Ref" : "AWS::NoValue"}
          ]
        },
        "MultiAZ" : "true",
        "VPCSecurityGroups" : [ { "Ref" : "DBSecurityGroup" }  ]
      }
    },

    "DBSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
         "GroupDescription" : "Security for RDS DB Instance.",
         "VpcId" : { "Fn::GetAtt": [ "Network", "VPCId" ] }
      }
    },

    "RequestCountHigh": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties" : {
        "AlarmDescription": { "Fn::Base64": { "Fn::Join" : ["", [
          "{",
            "\"service\":\"", { "Ref" : "Service" }, "\",",
            "\"cluster\":\"", { "Fn::GetAtt": [ "CoreOS", "ECSCluster" ] }, "\"",
          "}"
        ]]}},
        "MetricName": "RequestCount",
        "Namespace": "AWS/ELB",
        "Statistic": "Sum",
        "Period": "300",
        "EvaluationPeriods": "1",
        "ComparisonOperator": "GreaterThanThreshold",
        "Threshold": "500",
        "AlarmActions": [{ "Fn::GetAtt": [ "CoreOS", "ScalingTopic" ] }],
        "OKActions" : [{ "Fn::GetAtt": [ "CoreOS", "ScalingTopic" ] }],
        "InsufficientDataActions" : [{ "Fn::GetAtt": [ "CoreOS", "ScalingTopic" ] }],
        "Dimensions": [{
          "Name": "LoadBalancerName",
          "Value": { "Ref": "ElasticLoadBalancer" }
        }]
      }
    },

    "LoadBalancerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable Public TCP access on port 80",
        "VpcId" : { "Fn::GetAtt": [ "Network", "VPCId" ] },
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0" }
        ]
      }
    },

    "LoadBalancerIngressIntoCoreOSServer": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
        "IpProtocol": "tcp",
        "FromPort": { "Ref" : "ServicePort" },
        "ToPort": { "Ref" : "ServicePort" },
        "SourceSecurityGroupId": { "Ref" : "LoadBalancerSecurityGroup" },
        "GroupId": { "Fn::GetAtt": [ "CoreOS", "SecurityGroup" ] }
      }
    },

    "CoreOSServerIngressIntoDatabase": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties":{
        "IpProtocol": "tcp",
        "FromPort": { "Fn::GetAtt": [ "DBInstance", "Endpoint.Port" ] },
        "ToPort": { "Fn::GetAtt": [ "DBInstance", "Endpoint.Port" ] },
        "SourceSecurityGroupId": { "Fn::GetAtt": [ "CoreOS", "SecurityGroup" ] },
        "GroupId": { "Fn::GetAtt": [ "DBSecurityGroup", "GroupId" ] }
      }
    },

    "DNSZone" : {
      "Type" : "AWS::Route53::RecordSetGroup",
      "Properties" : {
        "HostedZoneName" : { "Fn::Join" :  ["", [{ "Fn::GetAtt": [ "Environment", "HostedZone" ] }, "."]] },
        "RecordSets" : [{
          "Name" : { "Fn::Join" :  ["", ["news.", { "Fn::GetAtt": [ "Environment", "HostedZone" ] }, "."]] },
          "Type" : "A",
          "AliasTarget" : {
            "HostedZoneId" : { "Fn::GetAtt" : ["ElasticLoadBalancer", "CanonicalHostedZoneNameID"] },
            "DNSName" : { "Fn::GetAtt" : ["ElasticLoadBalancer", "DNSName"] }
          }
        }]
      }
    }

  },

  "Outputs" : {

    "NewsEndpoint" : {
      "Description" : "URL of the News Service",
      "Value" : { "Fn::Join" :  ["", ["news.", { "Fn::GetAtt": [ "Environment", "HostedZone" ] }]] }
    }

  }
}
